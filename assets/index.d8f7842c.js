import{r as u,m as d,H as m,R as e,P as p,a as h}from"./vendor.e27c7894.js";const g=function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))s(r);new MutationObserver(r=>{for(const a of r)if(a.type==="childList")for(const i of a.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&s(i)}).observe(document,{childList:!0,subtree:!0});function n(r){const a={};return r.integrity&&(a.integrity=r.integrity),r.referrerpolicy&&(a.referrerPolicy=r.referrerpolicy),r.crossorigin==="use-credentials"?a.credentials="include":r.crossorigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function s(r){if(r.ep)return;r.ep=!0;const a=n(r);fetch(r.href,a)}};g();let f=o=>fetch(o).then(t=>t.text());const v=o=>(u.exports.useEffect(()=>{f("https://raw.githubusercontent.com/NutDevs-org/ModularKit/main/README.md").then(t=>{document.querySelector(".file-content").innerHTML=d.parse(t),m.highlightAll()}).catch(()=>document.querySelector(".file-content").innerHTML="<h1>Unable to fetch the file :/</h1>")}),e.createElement("main",{className:"main-content"},e.createElement("div",{className:"main-content-container"},e.createElement("div",{className:"file-content"}))));const w="modularkit-web",b="1.4.1",E="https://github.com/NukaWorks/ModularKit-Web",y="https://modularkit.nuka.works",k={"@fluentui/react":"^8.62.0","highlight.js":"^11.4.0",marked:"^4.0.12",react:"^17.0.2","react-dom":"^17.0.2"},N={start:"vite",build:"rm -rf build/ && vite build","gh-pages":"node scripts/gh-pages.js",deploy:"npm run build && npm run gh-pages"},L={extends:["react-app","react-app/jest"]},x={production:[">0.2%","not dead","not op_mini all"],development:["last 1 chrome version","last 1 firefox version","last 1 safari version"]},W={"@vitejs/plugin-react":"^1.2.0","gh-pages":"^3.2.3",sass:"^1.49.9",vite:"^2.8.6"};var l={name:w,version:b,repository:E,homepage:y,private:!0,dependencies:k,scripts:N,eslintConfig:L,browserslist:x,devDependencies:W};const M=()=>e.createElement("footer",{className:"main-footer"},e.createElement("a",{className:"sunproj-logo",href:"https://www.nutdevs.org/",rel:"noreferrer",target:"_blank",style:{display:"flex",alignItems:"center"}},e.createElement("img",{src:"https://raw.githubusercontent.com/NutDevs-org/Stuff/master/SunIcons/NutDevs.org-Logo_x1.png",height:"48px",width:"48px",alt:"NutDevs.org Logo"}),e.createElement("p",null,"NutDevs.org")),e.createElement("div",{className:"projAbout"},e.createElement("p",null,"\xA9 ",new Date().getFullYear()," NutDevs.org - All rights reserved."),e.createElement("a",{href:l.repository,rel:"noreferrer",title:"Go to ModularKit-Web ...",target:"_blank",className:"buildinfo"},l.name,e.createElement("span",null,"@"),l.version)));var S="/assets/logo.35a3867f.svg";const D=()=>e.createElement("div",{className:"applogo",style:{display:"flex",alignItems:"center"}},e.createElement("img",{className:"modularkit-logo",src:S,height:"48px",width:"48px",alt:"ModularKit Header Logo"}),e.createElement("p",null,"ModularKit")),j=()=>e.createElement("header",{className:"main-header"},e.createElement(D,null),e.createElement("a",{href:"https://github.com/NutDevs-org/ModularKit",rel:"noreferrer",target:"_blank",title:"See on Github ..."},e.createElement(p,{text:"View On Github !"}))),U=Boolean(window.location.hostname==="localhost"||window.location.hostname==="[::1]"||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function A(o){if("serviceWorker"in navigator){if(new URL({}.PUBLIC_URL,window.location.href).origin!==window.location.origin)return;window.addEventListener("load",()=>{const n=`${{}.PUBLIC_URL}/service-worker.js`;U?(F(n,o),navigator.serviceWorker.ready.then(()=>{console.log("This web app is being served cache-first by a service worker. To learn more, visit https://cra.link/PWA")})):c(n,o)})}}function c(o,t){navigator.serviceWorker.register(o).then(n=>{n.onupdatefound=()=>{const s=n.installing;s!=null&&(s.onstatechange=()=>{s.state==="installed"&&(navigator.serviceWorker.controller?(console.log("New content is available and will be used when all tabs for this page are closed. See https://cra.link/PWA."),t&&t.onUpdate&&t.onUpdate(n)):(console.log("Content is cached for offline use."),t&&t.onSuccess&&t.onSuccess(n)))})}}).catch(n=>{console.error("Error during service worker registration:",n)})}function F(o,t){fetch(o,{headers:{"Service-Worker":"script"}}).then(n=>{const s=n.headers.get("content-type");n.status===404||s!=null&&s.indexOf("javascript")===-1?navigator.serviceWorker.ready.then(r=>{r.unregister().then(()=>{window.location.reload()})}):c(o,t)}).catch(()=>{console.log("No internet connection found. App is running in offline mode.")})}h.render(e.createElement(e.Fragment,null,e.createElement(j,null),e.createElement(v,null),e.createElement(M,null)),document.getElementById("root"));A();
